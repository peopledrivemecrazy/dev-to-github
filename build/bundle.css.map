{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport dayjs from 'dayjs'\n\timport Analytics from 'analytics'\n\timport googleAnalytics from '@analytics/google-analytics'\n\n\n\tconst analytics = Analytics({\n\t\tapp: 'github.anoram.com',\n\t\tplugins: [\n\t\t\tgoogleAnalytics({\n\t\t\t\ttrackingId: 'UA-172454648-1'\n\t\t\t})\n\t\t]\n\t})\n\n\tanalytics.page()\n\tconst profileURL = \"https://dev.to/api/users/by_username?url=\";\n\tconst articlesURL = \"https://dev.to/api/articles?per_page=5&username=\"\n\tlet username = '';\n\tlet data = false;\n\tlet art;\n\tlet taData = '';\n\tlet articleList = '';\n\tlet github = ''\n\tlet stats = '';\n\n\tasync function fetchInfo(x) {\n\t\tconst res = await fetch(`${profileURL}${x}`).then(async data => {\n\t\t\tlet d = await data.json();\n\t\t\tgithub = d.github_username;\n\t\t\tif (github) {\n\n\t\t\t\ttaData =\n\t\t\t\t\t`# ${d.name}\\n${d.summary}\\n<hr>\\n\\n### 📝 Latest articles from [dev.to](https://dev.to/${d.username})\\n\\n`;\n\t\t\t}\n\t\t\treturn fetch(`${articlesURL}${x}`)\n\t\t}).then(art = await fetch(`${articlesURL}${x}`)).then(async article => {\n\t\t\tlet k = await article.json();\n\t\t\tk.forEach(element => {\n\t\t\t\tlet date = dayjs(element.published_timestamp).format(\"MMM DD YYYY\")\n\t\t\t\tarticleList += `* ${date} [${element.title}](${element.url}) \\n`\n\t\t\t});\n\n\t\t\tanalytics.track('Fetched data')\n\t\t\tif (github) {\n\t\t\t\tstats =\n\t\t\t\t\t`\\n\\n<p align=\"center\">\\n\\n<img src=\"https://visitor-badge.glitch.me/badge?page_id=${github}.${github}\" />\\n<img src=\"https://img.shields.io/badge/dynamic/json?color=brightgreen&label=followers&query=followers&url=https%3A%2F%2Fapi.github.com%2Fusers%2F${github}\" />\\n\\n</p>`\n\t\t\t}\n\t\t\tdata = true\n\t\t})\n\n\t}\n\n\tfunction handleClick(e) {\n\t\te.preventDefault();\n\t\ttaData = '';\n\t\tarticleList = '';\n\t\tgithub = ''\n\t\tstats = ''\n\t\tlet input = document.querySelector(\"#username\");\n\t\tinput.checkValidity();\n\t\tinput.reportValidity();\n\t\tif (input.checkValidity()) {\n\t\t\tanalytics.track('Generate MD')\n\t\t\tfetchInfo(username.toLowerCase())\n\t\t}\n\n\t}\n\n\tfunction copy() {\n\t\tvar copyText = document.querySelector(\"#mdData\");\n\t\tcopyText.select();\n\t\tdocument.execCommand(\"copy\");\n\t\tanalytics.track('Copy MD')\n\t}\n</script>\n<style>\n\ttextarea {\n\t\twidth: 100%;\n\t\tmin-height: 400px\n\t}\n\n\tcode {\n\t\tcolor: crimson\n\t}\n\n\tinput {\n\t\twidth: 15em;\n\t}\n</style>\n<main>\n\n\t<form>\n\t\t<label for=\"username\"></label>\n\t\t<input type=\"text\" bind:value={username} id=\"username\" placeholder=\"dev.to username or type ben\" required\n\t\t\ton:change={()=> data = false}>\n\n\t\t<button on:click={handleClick} type=\"submit\">Fetch Data</button>\n\n\t</form>\n\n\t{#if data} \n<p class=\"py-2\">Copy this to your github profile's <code>README.md</code></p>\n<textarea name=\"md\" id=\"mdData\">{taData?taData:`incomplete profile </3`}{articleList}{stats}\n\n</textarea>\n<button on:click={copy}><svg title=\"Copy to clipboard\" class=\"octicon octicon-clippy\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\" aria-hidden=\"true\" > <path fill-rule=\"evenodd\" d=\"M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z\"></path> </svg> Copy</button>\n\n{/if}\n\n</main>\n<footer class=\"text-center\">\n\t<span>from</span> <a href=\"https://anoram.com\">Anoram</a>\n</footer>"
  ],
  "names": [],
  "mappings": "AA6EC,QAAQ,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK;CAClB,CAAC,AAED,IAAI,cAAC,CAAC,AACL,KAAK,CAAE,OAAO;CACf,CAAC,AAED,KAAK,cAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACZ,CAAC"
}